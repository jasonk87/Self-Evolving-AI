{
    "echo_message": {
        "tool_name": "echo_message",
        "module_path": "ai_assistant.custom_tools.my_extra_tools",
        "function_name": "echo_message",
        "description": "Repeats a message a specified number of times.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "process_search_results": {
        "tool_name": "process_search_results",
        "module_path": "ai_assistant.custom_tools.my_extra_tools",
        "function_name": "process_search_results",
        "description": "Processes JSON search results based on a specified instruction to generate a response.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "search_duckduckgo": {
        "tool_name": "search_duckduckgo",
        "module_path": "ai_assistant.custom_tools.my_extra_tools",
        "function_name": "search_duckduckgo",
        "description": "Searches the internet using DuckDuckGo and returns the results as a JSON string.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "search_google_custom_search": {
        "tool_name": "search_google_custom_search",
        "module_path": "ai_assistant.custom_tools.my_extra_tools",
        "function_name": "search_google_custom_search",
        "description": "Searches Google. Args: query (str). Optional in kwargs: num_results (str, 1-10, default '5').",
        "type": "custom_discovered",
        "schema_details": null
    },
    "subtract_numbers": {
        "tool_name": "subtract_numbers",
        "module_path": "ai_assistant.custom_tools.my_extra_tools",
        "function_name": "subtract_numbers",
        "description": "Subtracts the second number from the first.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "get_self_awareness_info_and_converse": {
        "tool_name": "get_self_awareness_info_and_converse",
        "module_path": "ai_assistant.custom_tools.awareness_tools",
        "function_name": "get_self_awareness_info_and_converse",
        "description": "Provides a conversational response about the AI's current status,",
        "type": "custom_discovered",
        "schema_details": null
    },
    "manage_tool_confirmation_settings": {
        "tool_name": "manage_tool_confirmation_settings",
        "module_path": "ai_assistant.custom_tools.config_management_tools",
        "function_name": "manage_tool_confirmation_settings",
        "description": "Manages the list of tools that require explicit user confirmation before execution.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "add_dependency_to_project": {
        "tool_name": "add_dependency_to_project",
        "module_path": "ai_assistant.custom_tools.project_management_tools",
        "function_name": "add_dependency_to_project",
        "description": "Adds a dependency to the specified project's manifest.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "build_project": {
        "tool_name": "build_project",
        "module_path": "ai_assistant.custom_tools.project_management_tools",
        "function_name": "build_project",
        "description": "Builds the specified project based on 'build_config' in the manifest.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "generate_code_for_project_file": {
        "tool_name": "generate_code_for_project_file",
        "module_path": "ai_assistant.custom_tools.project_management_tools",
        "function_name": "generate_code_for_project_file",
        "description": "Generates code for a specific file within an AI-managed project,",
        "type": "custom_discovered",
        "schema_details": null
    },
    "initiate_ai_project": {
        "tool_name": "initiate_ai_project",
        "module_path": "ai_assistant.custom_tools.project_management_tools",
        "function_name": "initiate_ai_project",
        "description": "Initializes a new AI-managed software project. ",
        "type": "custom_discovered",
        "schema_details": null
    },
    "request_code_review_tool": {
        "tool_name": "request_code_review_tool",
        "module_path": "ai_assistant.custom_tools.project_management_tools",
        "function_name": "request_code_review_tool",
        "description": "Requests a review for the provided code against original requirements and related tests.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "run_project_tests": {
        "tool_name": "run_project_tests",
        "module_path": "ai_assistant.custom_tools.project_management_tools",
        "function_name": "run_project_tests",
        "description": "Runs the tests for the specified project based on 'test_config' in the manifest.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "execute_project_coding_plan": {
        "tool_name": "execute_project_coding_plan",
        "module_path": "ai_assistant.custom_tools.project_execution_tools",
        "function_name": "execute_project_coding_plan",
        "description": "Executes the coding plan for a given project by generating code for all",
        "type": "custom_discovered",
        "schema_details": null
    },
    "generate_and_review_code_tool": {
        "tool_name": "generate_and_review_code_tool",
        "module_path": "ai_assistant.custom_tools.project_execution_tools",
        "function_name": "generate_and_review_code_tool",
        "description": "Generates Python code based on a description, then reviews it automatically.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "execute_python_script_in_project": {
        "tool_name": "execute_python_script_in_project",
        "module_path": "ai_assistant.custom_tools.code_execution_tools",
        "function_name": "execute_python_script_in_project",
        "description": "Executes a specified Python script within a given project directory.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "run_all_tests": {
        "tool_name": "run_all_tests",
        "module_path": "ai_assistant.custom_tools.code_execution_tools",
        "function_name": "run_all_tests",
        "description": "No description available.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "setup_test_environment": {
        "tool_name": "setup_test_environment",
        "module_path": "ai_assistant.custom_tools.code_execution_tools",
        "function_name": "setup_test_environment",
        "description": "No description available.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "teardown_test_environment": {
        "tool_name": "teardown_test_environment",
        "module_path": "ai_assistant.custom_tools.code_execution_tools",
        "function_name": "teardown_test_environment",
        "description": "No description available.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "create_project_directory": {
        "tool_name": "create_project_directory",
        "module_path": "ai_assistant.custom_tools.file_system_tools",
        "function_name": "create_project_directory",
        "description": "Creates a new project directory under the BASE_PROJECTS_DIR.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "read_text_from_file": {
        "tool_name": "read_text_from_file",
        "module_path": "ai_assistant.custom_tools.file_system_tools",
        "function_name": "read_text_from_file",
        "description": "Reads and returns the text content from the specified file.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "sanitize_project_name": {
        "tool_name": "sanitize_project_name",
        "module_path": "ai_assistant.custom_tools.file_system_tools",
        "function_name": "sanitize_project_name",
        "description": "Sanitizes a project name to create a safe directory name.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "write_text_to_file": {
        "tool_name": "write_text_to_file",
        "module_path": "ai_assistant.custom_tools.file_system_tools",
        "function_name": "write_text_to_file",
        "description": "Writes the given text content to the specified file.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "push_ai_generated_commits": {
        "tool_name": "push_ai_generated_commits",
        "module_path": "ai_assistant.custom_tools.git_tools",
        "function_name": "push_ai_generated_commits",
        "description": "Pushes locally committed AI self-modifications to a remote repository ",
        "type": "custom_discovered",
        "schema_details": null
    },
    "learn_fact": {
        "tool_name": "learn_fact",
        "module_path": "ai_assistant.custom_tools.knowledge_tools",
        "function_name": "learn_fact",
        "description": "Learns a new fact by adding it to the knowledge base via LLM curation.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "recall_facts": {
        "tool_name": "recall_facts",
        "module_path": "ai_assistant.custom_tools.knowledge_tools",
        "function_name": "recall_facts",
        "description": "Retrieves a list of learned facts from the curated fact store.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "run_periodic_fact_store_curation_async": {
        "tool_name": "run_periodic_fact_store_curation_async",
        "module_path": "ai_assistant.custom_tools.knowledge_tools",
        "function_name": "run_periodic_fact_store_curation_async",
        "description": "Performs a periodic curation of the entire fact store using the LLM.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "generate_new_tool_from_description": {
        "tool_name": "generate_new_tool_from_description",
        "module_path": "ai_assistant.custom_tools.meta_programming_tools",
        "function_name": "generate_new_tool_from_description",
        "description": "Generates Python code for a new tool based on a description and saves it",
        "type": "custom_discovered",
        "schema_details": null
    },
    "get_generated_tools_path": {
        "tool_name": "get_generated_tools_path",
        "module_path": "ai_assistant.custom_tools.meta_programming_tools",
        "function_name": "get_generated_tools_path",
        "description": "Returns the absolute path to the directory where generated tools are stored.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "greet_user": {
        "tool_name": "greet_user",
        "module_path": "ai_assistant.tools.tool_system",
        "function_name": "_example_greet_user",
        "description": "Greets the user. Args: name (str)",
        "type": "builtin",
        "schema_details": null
    },
    "add_numbers": {
        "tool_name": "add_numbers",
        "module_path": "ai_assistant.tools.tool_system",
        "function_name": "_example_add_numbers",
        "description": "Adds two integers. Args: a (int), b (int)",
        "type": "builtin",
        "schema_details": null
    },
    "multiply_numbers": {
        "tool_name": "multiply_numbers",
        "module_path": "ai_assistant.tools.tool_system",
        "function_name": "_example_multiply_numbers",
        "description": "Multiplies two floats. Args: x (float), y (float)",
        "type": "builtin",
        "schema_details": null
    },
    "no_op_tool": {
        "tool_name": "no_op_tool",
        "module_path": "ai_assistant.tools.tool_system",
        "function_name": "_example_no_op_tool",
        "description": "Does nothing, useful for default plans.",
        "type": "builtin",
        "schema_details": null
    },
    "view_function_code": {
        "tool_name": "view_function_code",
        "module_path": "ai_assistant.tools.tool_system",
        "function_name": "_tool_view_function_code",
        "description": "Retrieves the source code of a specified function. Inputs: module_path (str), function_name (str).",
        "type": "builtin",
        "schema_details": null
    },
    "simulate_edit_function_code": {
        "tool_name": "simulate_edit_function_code",
        "module_path": "ai_assistant.tools.tool_system",
        "function_name": "_tool_simulate_edit_function_code",
        "description": "Simulates editing source code. Inputs: module_path (str), function_name (str), new_code_block (str).",
        "type": "builtin",
        "schema_details": null
    },
    "maybe_fail_tool": {
        "tool_name": "maybe_fail_tool",
        "module_path": "ai_assistant.tools.tool_system",
        "function_name": "_example_maybe_fail_tool",
        "description": "A tool that fails on its 1st, 3rd, etc. call and succeeds on its 2nd, 4th, etc. call.",
        "type": "builtin",
        "schema_details": null
    },
    "request_user_clarification": {
        "tool_name": "request_user_clarification",
        "module_path": "ai_assistant.custom_tools.conversational_tools",
        "function_name": "request_user_clarification",
        "description": "Asks the user a clarifying question to resolve ambiguities or gather missing information needed to complete a task. Returns the user's textual response.",
        "type": "custom_discovered",
        "schema_details": {
            "name": "request_user_clarification",
            "description": "Asks the user a clarifying question to resolve ambiguities or gather missing information needed to complete a task. Returns the user's textual response.",
            "parameters": [
                {
                    "name": "question_text",
                    "type": "str",
                    "description": "The question to ask the user."
                },
                {
                    "name": "options",
                    "type": "list",
                    "description": "Optional. A list of suggested string options for the user to choose from or consider."
                }
            ],
            "returns": {
                "type": "str",
                "description": "The user's textual reply to the clarification question."
            }
        }
    },
    "propose_project_file_update": {
        "tool_name": "propose_project_file_update",
        "module_path": "ai_assistant.custom_tools.project_management_tools",
        "function_name": "propose_project_file_update",
        "description": "No description available.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "get_project_file_content": {
        "tool_name": "get_project_file_content",
        "module_path": "ai_assistant.custom_tools.file_system_tools",
        "function_name": "get_project_file_content",
        "description": "Reads the content of a specified file within a project.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "list_project_files": {
        "tool_name": "list_project_files",
        "module_path": "ai_assistant.custom_tools.file_system_tools",
        "function_name": "list_project_files",
        "description": "Lists files and directories within a specified project's root path or a subdirectory thereof.",
        "type": "custom_discovered",
        "schema_details": null
    },
    "get_item_details_by_id": {
        "tool_name": "get_item_details_by_id",
        "module_path": "ai_assistant.custom_tools.awareness_tools",
        "function_name": "get_item_details_by_id",
        "description": "Retrieves details for a specific system item (task, suggestion, or project) using its ID and type.",
        "type": "custom_discovered",
        "schema_details": {
            "name": "get_item_details_by_id",
            "description": "Retrieves details for a specific system item (task, suggestion, or project) using its ID and type.",
            "parameters": [
                {
                    "name": "item_id",
                    "type": "str",
                    "description": "The unique ID of the item."
                },
                {
                    "name": "item_type",
                    "type": "str",
                    "description": "The type of item. Valid values: 'task', 'suggestion', 'project'."
                }
            ],
            "returns": {
                "type": "dict",
                "description": "A dictionary containing the item's details, or an error dictionary if not found or type is invalid."
            }
        }
    },
    "get_system_status_summary": {
        "tool_name": "get_system_status_summary",
        "module_path": "ai_assistant.custom_tools.awareness_tools",
        "function_name": "get_system_status_summary",
        "description": "Provides a summary of current system activity, including active/archived tasks and recent unread notifications.",
        "type": "custom_discovered",
        "schema_details": {
            "name": "get_system_status_summary",
            "description": "Provides a summary of current system activity, including active/archived tasks and recent unread notifications.",
            "parameters": [
                {
                    "name": "active_limit",
                    "type": "int",
                    "description": "Optional. Max active tasks to detail (default 5)."
                },
                {
                    "name": "archived_limit",
                    "type": "int",
                    "description": "Optional. Max archived tasks to detail (default 3)."
                },
                {
                    "name": "unread_notifications_limit",
                    "type": "int",
                    "description": "Optional. Max unread notifications to detail (default 3)."
                }
            ],
            "returns": {
                "type": "str",
                "description": "A multi-line string summarizing system status and notifications."
            }
        }
    },
    "list_formatted_suggestions": {
        "tool_name": "list_formatted_suggestions",
        "module_path": "ai_assistant.custom_tools.awareness_tools",
        "function_name": "list_formatted_suggestions",
        "description": "Lists system-generated or user-added suggestions, optionally filtered by status (e.g., pending, approved). Useful for reviewing items that might lead to agent improvements or new tasks.",
        "type": "custom_discovered",
        "schema_details": {
            "name": "list_formatted_suggestions",
            "description": "Lists system-generated or user-added suggestions, optionally filtered by status (e.g., pending, approved). Useful for reviewing items that might lead to agent improvements or new tasks.",
            "parameters": [
                {
                    "name": "status_filter",
                    "type": "str",
                    "description": "Optional. Filter suggestions by status (e.g., 'pending', 'approved', 'implemented', 'denied'). If 'all' or not provided, lists pending suggestions by default. Use 'all' to see all suggestions regardless of status.",
                    "default": "pending"
                }
            ],
            "returns": {
                "type": "list",
                "item_type": "dict",
                "description": "A list of dictionaries, each representing a suggestion with its key details (id, type, description, status, created_at). Returns an empty list if no suggestions match."
            }
        }
    },
    "execute_project_plan": {
        "tool_name": "execute_project_plan",
        "module_path": "ai_assistant.custom_tools.project_execution_tools",
        "function_name": "execute_project_plan",
        "description": "Executes a structured project plan, step by step. Currently simulates execution for most step types.",
        "type": "custom_discovered",
        "schema_details": {
            "name": "execute_project_plan",
            "description": "Executes a structured project plan, step by step. Currently simulates execution for most step types.",
            "parameters": [
                {
                    "name": "project_plan",
                    "type": "list",
                    "description": "A list of steps, where each step is a dictionary.",
                    "item_type": {
                        "type": "dict",
                        "properties": {
                            "step_id": {
                                "type": "str",
                                "description": "Unique identifier for the step (e.g., '1.1', '2.a')."
                            },
                            "description": {
                                "type": "str",
                                "description": "Human-readable description of what this step achieves."
                            },
                            "type": {
                                "type": "str",
                                "description": "Type of the step. Supported: 'python_script', 'human_review_gate', 'informational'."
                            },
                            "details": {
                                "type": "dict",
                                "description": "Dictionary containing type-specific details for the step.",
                                "properties_conditional": [
                                    {
                                        "condition_on_field": "type",
                                        "condition_value": "python_script",
                                        "properties": {
                                            "script_content": {
                                                "type": "str",
                                                "description": "The Python script content as a string."
                                            },
                                            "input_files": {
                                                "type": "dict",
                                                "description": "Optional. Filename:content map for files to create in the execution dir. Keys are filenames (str), values are file content (str)."
                                            },
                                            "output_files_to_capture": {
                                                "type": "list",
                                                "description": "Optional. List of filenames (str) expected to be created, whose content will be captured."
                                            }
                                        }
                                    },
                                    {
                                        "condition_on_field": "type",
                                        "condition_value": "human_review_gate",
                                        "properties": {
                                            "prompt_to_user": {
                                                "type": "str",
                                                "description": "The question or information to present to the user for review/approval."
                                            }
                                        }
                                    },
                                    {
                                        "condition_on_field": "type",
                                        "condition_value": "informational",
                                        "properties": {
                                            "message": {
                                                "type": "str",
                                                "description": "The informational message to log or display."
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "project_name",
                    "type": "str",
                    "description": "Optional. The name or ID of the project this plan relates to.",
                    "optional": true
                }
            ],
            "returns": {
                "type": "dict",
                "description": "A dictionary summarizing the execution, including overall status, number of steps processed, and results for each step, plus a log preview."
            }
        }
    },
    "execute_sandboxed_python_script": {
        "tool_name": "execute_sandboxed_python_script",
        "module_path": "ai_assistant.custom_tools.code_execution_tools",
        "function_name": "execute_sandboxed_python_script",
        "description": "Executes a given Python script string in a temporary, somewhat isolated environment. WARNING: Basic PoC sandbox with minimal security. Use with extreme caution.",
        "type": "custom_discovered",
        "schema_details": {
            "name": "execute_sandboxed_python_script",
            "description": "Executes a given Python script string in a temporary, somewhat isolated environment. WARNING: Basic PoC sandbox with minimal security. Use with extreme caution.",
            "parameters": [
                {
                    "name": "script_content",
                    "type": "str",
                    "description": "The Python script content as a string."
                },
                {
                    "name": "input_files",
                    "type": "dict",
                    "description": "Optional. Filename:content map for files to create in the execution dir."
                },
                {
                    "name": "output_filenames",
                    "type": "list",
                    "description": "Optional. List of filenames expected to be created by the script, whose content will be returned."
                },
                {
                    "name": "timeout_seconds",
                    "type": "int",
                    "description": "Optional. Timeout for script execution (default 10s)."
                },
                {
                    "name": "python_executable",
                    "type": "str",
                    "description": "Optional. Path to python interpreter (e.g., 'python' or '/usr/bin/python3'). Defaults to 'python'."
                }
            ],
            "returns": {
                "type": "dict",
                "description": "A dict with 'status' ('success', 'timeout', 'error'), 'return_code', 'stdout', 'stderr', 'output_files' (dict), 'error_message'."
            }
        }
    },
    "manage_suggestion_status": {
        "tool_name": "manage_suggestion_status",
        "module_path": "ai_assistant.custom_tools.suggestion_management_tools",
        "function_name": "manage_suggestion_status",
        "description": "Approves or denies a specific suggestion by its ID.",
        "type": "custom_discovered",
        "schema_details": null
    }
}